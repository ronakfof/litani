name: CI
on:
  workflow_dispatch:

jobs:
  test-bot:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-10.15]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - name: Build bottle
        run: |
          brew tap aws/tap
          brew update-reset
          brew test-bot aws/tap/cbmc-viewer

      - name: LS
        run: ls
      - name: pwd
        run: echo $(pwd)
      - name: Upload bottles as artifact
        if: always()
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: '*.bottle.*'
      - name: diff
        run: |
          cd $(brew --repository)/Library/Taps/aws/homebrew-tap/
          git diff
      - name: packages
        id: packages
        run: |
          bottle_name="$(ls *.tar.gz)"
          echo "::set-output name=bottle::$bottle_name"
          echo "::set-output name=bottle_name::$bottle_name"
      - uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
            route: GET /repos/:repository/releases/latest
            repository: ${{ github.repository }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: get upload url
        id: get_upload_url
        run: |
          brew install jq
          url=$(echo "$response" | jq -r '.upload_url')
          echo "::set-output name=url::$url"
        env: 
            response:  ${{ steps.get_latest_release.outputs.data }}
      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_upload_url.outputs.url }}
          asset_path: ${{ steps.packages.outputs.bottle }}
          asset_name: ${{ steps.packages.outputs.bottle_name }}
          asset_content_type: application/x-gzip
  upload:
    needs: test-bot
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: bottles

    - name: Display structure of downloaded files
      run: ls -R
